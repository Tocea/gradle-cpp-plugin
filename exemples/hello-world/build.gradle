/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jguidoux' at '23/09/15 13:35' with Gradle 2.4
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/





buildscript {
  apply from: '../version.gradle'
  
  repositories {
    mavenLocal()
   jcenter()
  }
  dependencies {
    classpath "fr.echoes.gradle.plugins:gradle-cpp-plugin:${cppPluginVersion('../../gradle.properties')}"
  }
}

apply plugin: "fr.echoes.gradle.cpp"





task launchCMake(type: Exec, group: "init") {

    workingDir "$buildDir"
    executable "cmake"
    args  ".."
}

///////////// only for the example /////////////
// just for the demo to facilicate update modulesS
task copyModules(type: Copy) {
    def modules = file('../../modules/cmake_modules')
    if (! modules.exists()) {
        throw new  RuntimeException("modules path ${modules} is wrong")
    }
    from modules
    into "cmake_modules"
}
launchCMake.dependsOn copyModules
/////////////////////////////////////////

compileCpp.dependsOn launchCMake


cpp {
    applicationType = "capplication"
    exec.with {
        execPath = 'echo'
        compileCppExecPath = 'make'
        compileCppExecWorkingDir = "$buildDir"
    }
}

task run(type: Exec, dependsOn: build) {
    workingDir "$buildDir/tmp/bin"
    executable "./${project.name}-$version"
} 



task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

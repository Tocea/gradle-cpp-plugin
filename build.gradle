/*
 * Copyright 2013-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
    }
}


plugins {
    id "com.github.kt3k.coveralls" version "2.4.0"
    id "com.gradle.plugin-publish" version "0.9.1"

}


    apply plugin: 'idea'
    apply plugin: "maven"
    apply plugin: 'jacoco'


    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    
    dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'commons-io:commons-io:2.4'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile ('org.spockframework:spock-core:1.0-groovy-2.3') {
        exclude module : 'groovy-all'
    }



task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

    task wrapper(type: Wrapper) {
        gradleVersion = gradeleWrapper
    }

    jacoco {
        toolVersion = '0.7.1.201405082137'
    }

}



    apply plugin: 'groovy'
    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }


coveralls {
    sourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs).files.absolutePath
}


task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
        xml.destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'https://github.com/Tocea/gradle-cpp-plugin'
    vcsUrl = 'https://github.com/Tocea/gradle-cpp-plugin'
    description = 'gradle plugin for c++'
    tags = ['cpp', 'c++']

    plugins {
        cppPlugin {
            id = 'fr.echoes.gradle.cpp'
            displayName = 'gradle plugin for c++'
        }
    }
}

/*
 * Copyright 2013-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
    }
}


plugins {
    id "com.github.kt3k.coveralls" version "2.4.0"
    id "com.gradle.plugin-publish" version "0.9.1"
    id "idea"
    id "maven"
    id "jacoco"
    id "groovy"
    id "sonar-runner"
}



repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}


compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}
compileGroovy {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}


configurations {
    groovyDoc.extendsFrom runtime
}



dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "commons-io:commons-io:$commonsioVersion"

    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude module: 'groovy-all'
    }
    testRuntime("com.athaydes:spock-reports:$spockSeportVersion"){
        exclude module: 'groovy-all'
    }

    //documentation
    dependencies {
        groovyDoc "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"
        groovyDoc "org.codehaus.groovy:groovy-ant:$groovyVersion"
    }
}


task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) {
    gradleVersion = gradeleWrapper
}


groovydoc {
    groovyClasspath = configurations.groovyDoc
}

jacoco {
    toolVersion = '0.7.1.201405082137'
}


jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}



// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'http://tocea.github.io/gradle-cpp-plugin/'
    vcsUrl = 'https://github.com/Tocea/gradle-cpp-plugin'
    description = 'gradle plugin for c++'
    tags = ['cpp', 'c++']

    plugins {
        cppPlugin {
            id = 'fr.echoes.gradle.cpp'
            displayName = 'gradle plugin for c++'
        }
    }
}



/////////////////// for system testings ////////////////////////

apply from: 'systemTests.gradle'

task systemTests(dependsOn: install)

systemTests.dependsOn helloWorldTest
systemTests.dependsOn helloWordWithDependenciesTest
systemTests.dependsOn helloWorldMulitModulesTest


/////////////////// sonar ///////////

sonarRunner {
    forkOptions {
        maxHeapSize = '1024m'
    }
    sonarProperties {
        property "sonar.host.url", "http://zeus:9000";
        property "sonar.jdbc.url", "jdbc:mysql://zeus:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance";
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
            property "sonar.jdbc.username", "sonar"
            property "sonar.jdbc.password", "sonar"
    }
}


subprojects {
     sonar.project{
         language = "groovy"
     }
}
         
